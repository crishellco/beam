{"version":3,"file":"beam.js","sources":["../src/Beam.js","../src/constants.js","../src/utils.js","../src/factory.js","../src/index.cjs.js"],"sourcesContent":["import { WILDCARD } from './constants';\nimport { debounce } from './utils';\n\nexport default class Beam {\n  constructor() {\n    this._listeners = new Map();\n  }\n\n  on(type, listener) {\n    const listeners = this._listeners.get(type);\n\n    if (listeners) {\n      listeners.push(listener);\n    } else {\n      this._listeners.set(type, [listener]);\n    }\n  }\n\n  off(type, listener) {\n    const listeners = this._listeners.get(type);\n\n    if (!listeners) return;\n\n    if (listener) {\n      listeners.indexOf(listener) > -1 && listeners.splice(listeners.indexOf(listener), 1);\n    } else {\n      this._listeners.set(type, []);\n    }\n  }\n\n  once(type, listener) {\n    const fn = (...args) => {\n      listener(...args);\n      this.off(type, fn);\n    };\n\n    this.on(type, fn);\n  }\n\n  emit(type, payload = {}) {\n    const listeners = (this._listeners.get(type) || []).concat(this._listeners.get(WILDCARD) || []);\n\n    if (listeners.length) {\n      listeners.slice().map((listener) => {\n        listener(payload, type);\n      });\n    }\n  }\n\n  debouncedEmit(delay, type) {\n    return debounce((payload) => this.emit(type, payload), delay);\n  }\n\n  removeAllListeners() {\n    this._listeners.clear();\n  }\n\n  get listeners() {\n    return Object.fromEntries(this._listeners);\n  }\n}\n","export const DEFAULT_INSTANCE_ID = 'default';\nexport const WILDCARD = '*';\n","export const get = (obj, path, defaultValue) => {\n  const travel = (regexp) =>\n    String.prototype.split\n      .call(path, regexp)\n      .filter(Boolean)\n      .reduce((res, key) => {\n        // istanbul ignore next\n        return res !== null && res !== undefined ? res[key] : res;\n      }, obj);\n\n  const result = travel(/[,[\\]]+?/) || travel(/[,[\\].]+?/);\n\n  return result === undefined || result === obj ? defaultValue : result;\n};\n\nexport const debounce = (callback, wait) => {\n  let timeoutId = null;\n\n  return (...args) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      callback.apply(null, args);\n    }, wait);\n  };\n};\n","import { DEFAULT_INSTANCE_ID } from './constants';\nimport Beam from './Beam';\n\nconst instances = new Map();\n\nexport default function (instanceId = DEFAULT_INSTANCE_ID) {\n  let instance = instances.get(instanceId);\n\n  if (instance) return instance;\n\n  instance = new Beam();\n\n  instances.set(instanceId, instance);\n\n  return instance;\n}\n","import factory from './factory';\nimport Beam from './Beam';\n\nObject.assign(factory, { Beam });\n\nexport default factory;\n"],"names":["Beam","this","_listeners","Map","on","type","listener","listeners","get","push","set","off","indexOf","splice","once","fn","_this","emit","payload","concat","length","slice","map","debouncedEmit","delay","callback","wait","timeoutId","_this2","clearTimeout","setTimeout","apply","removeAllListeners","clear","Object","fromEntries","instances","instanceId","instance","assign","factory"],"mappings":"IAGqBA,0BACnB,aACEC,KAAKC,WAAa,IAAIC,iCAGxBC,GAAA,SAAGC,EAAMC,GACP,IAAMC,EAAYN,KAAKC,WAAWM,IAAIH,GAElCE,EACFA,EAAUE,KAAKH,GAEfL,KAAKC,WAAWQ,IAAIL,EAAM,CAACC,OAI/BK,IAAA,SAAIN,EAAMC,GACR,IAAMC,EAAYN,KAAKC,WAAWM,IAAIH,GAEjCE,IAEDD,EACFC,EAAUK,QAAQN,IAAa,GAAKC,EAAUM,OAAON,EAAUK,QAAQN,GAAW,GAElFL,KAAKC,WAAWQ,IAAIL,EAAM,QAI9BS,KAAA,SAAKT,EAAMC,cAMTL,KAAKG,GAAGC,EALG,SAALU,IACJT,yCACAU,EAAKL,IAAIN,EAAMU,QAMnBE,KAAA,SAAKZ,EAAMa,YAAAA,IAAAA,EAAU,IACnB,IAAMX,GAAaN,KAAKC,WAAWM,IAAIH,IAAS,IAAIc,OAAOlB,KAAKC,WAAWM,ICvCvD,MDuCwE,IAExFD,EAAUa,QACZb,EAAUc,QAAQC,IAAI,SAAChB,GACrBA,EAASY,EAASb,QAKxBkB,cAAA,SAAcC,EAAOnB,OElCEoB,EAAUC,EAC7BC,SFkCF,OEnCqBF,EFmCL,SAACP,UAAYU,EAAKX,KAAKZ,EAAMa,IEnCdQ,EFmCwBF,EElCrDG,EAAY,gCAGdE,aAAaF,GACbA,EAAYG,WAAW,WACrBL,EAASM,MAAM,wBACdL,OF+BLM,mBAAA,WACE/B,KAAKC,WAAW+B,kCAGlB,WACE,OAAOC,OAAOC,YAAYlC,KAAKC,0MGvD7BkC,EAAY,IAAIjC,eAEGkC,YAAAA,IAAAA,EFLU,WEMjC,IAAIC,EAAWF,EAAU5B,IAAI6B,GAE7B,OAAIC,IAEJA,EAAW,IAAItC,EAEfoC,EAAU1B,IAAI2B,EAAYC,GAEnBA,GCXTJ,OAAOK,OAAOC,EAAS,CAAExC,KAAAA"}